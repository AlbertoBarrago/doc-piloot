import dotenv from "dotenv";
import { Octokit } from "octokit";
import { getRepoFilesAnalysis } from "../src/app/analyzer.js";
import { generateReadmeFromAnalysis } from "../src/app/gemini.js";
import { pushReadme } from "../src/app/pushReadme.js";

dotenv.config();

async function test() {
    const githubToken = process.env.GITHUB_TOKEN;
    if (!githubToken) throw new Error("GITHUB_TOKEN missing");

    const octokit = new Octokit({ auth: githubToken });

    const owner = process.env.GITHUB_REPO_TEST_OWNER || "albertobarrago";
    const repo = process.env.GITHUB_REPO_TEST_NAME || "doc-pilot";

    console.log(`Analyzing repository: ${owner}/${repo}`);

    try {
        // Step 1: Analyze repository files
        console.log("Step 1: Analyzing repository files...");
        const analysis = await getRepoFilesAnalysis(octokit, owner, repo);
        console.log("Repository analysis complete.");

        // Step 2: Generate README content
        console.log("Step 2: Generating README content...");
        const readme = await generateReadmeFromAnalysis(analysis);
        if (!readme) {
            throw new Error("Failed to generate README content");
        }
        console.log("=== GENERATED README ===\n", readme);

        // Step 3: Push README to repository (optional)
        const shouldPush = process.argv.includes("--push");
        if (shouldPush) {
            console.log("Step 3: Pushing README to repository...");
            await pushReadme({
                octokit,
                owner,
                repo,
                content: readme,
                branchName: "update-readme",
                commitMessage: "docs: update README.md generated by doc-pilot",
                prTitle: "Update README.md",
                prBody: "This PR updates the README.md file with automatically generated content from doc-pilot."
            });
            console.log("README pushed to repository successfully!");
        } else {
            console.log("Skipping push to repository. Use --push flag to push README.");
        }

        console.log("Test completed successfully!");
    } catch (error) {
        console.error("Error during test:", error);
        throw error;
    }
}

test().catch(error => {
    console.error("Test failed:", error);
    process.exit(1);
});
